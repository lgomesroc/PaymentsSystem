using PaymentsSystem.Services;

namespace PaymentsSystem.Programs
{
    public class PaymentProgram
    {
        private readonly Dictionary<string, IPaymentService> _paymentServices;

        public PaymentProgram(IEnumerable<IPaymentService> paymentServices)
        {
            _paymentServices = paymentServices.ToDictionary(service => service.GetType().Name.Replace("Service", "").ToLower());
        }

        public void ExecutePayment(string paymentMethod, string token, decimal amount)
        {
            if (_paymentServices.TryGetValue(paymentMethod.ToLower(), out var paymentService))
            {
                try
                {
                    paymentService.ProcessPayment(token, amount);
                    Console.WriteLine($"{paymentMethod} payment processed successfully.");
                }
                catch (Exception ex)
                {
                    Console.WriteLine($"Erro ao processar o pagamento: {ex.Message}");
                }
            }
            else
            {
                Console.WriteLine("Método de pagamento não suportado.");
            }
        }
    }
}
